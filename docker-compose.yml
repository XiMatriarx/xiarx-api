version: '3.7'
services:
  database:
    image: postgres:15-alpine
    restart: always
    ports:
      - 8000:5432
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: data
  health:
    image: hasura/graphql-data-connector:v2.37.0
    restart: always
    ports:
      - 8001:8081
    environment:
      QUARKUS_LOG_LEVEL: DEBUG
      QUARKUS_OPENTELEMETRY_ENABLED: 'false'
      # QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/athena/health"]
      interval: 2s
      timeout: 2s
      retries: 2
      start_period: 2s
  api:
    image: hasura/graphql-engine:v2.37.0
    restart: always
    ports:
      - 8080:8080
    environment:
      DATABASE_URL: postgres://postgres:password@database:5432/data
      # HASURA_GRAPHQL_ADMIN_SECRET: secret
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:password@database:5432/data
      HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'
    depends_on:
      health:
        condition: service_healthy
volumes:
  data:
